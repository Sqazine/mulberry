cmake_minimum_required(VERSION 3.10)

project(mulberry LANGUAGES CXX C)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(VULKAN_ROOT "$ENV{VULKAN_SDK}" CACHE STRING "")
set(VULKAN_INCLUDE_DIR "${VULKAN_ROOT}/Include")
set(VULKAN_LIB_DIR "${VULKAN_ROOT}/Lib")

message("VULKAN_ROOT=${VULKAN_ROOT}")
message("VULKAN_INCLUDE_DIR=${VULKAN_INCLUDE_DIR}")
message("VULKAN_LIB_DIR=${VULKAN_LIB_DIR}")

set(DISABLE_FORCE_DEBUG_POSTFIX ON)
set(CMAKE_DEBUG_POSTFIX "_d") 
set(CMAKE_RELEASE_POSTFIX "")
set(SDL_CMAKE_DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})

set(SPIRV_HEADERS_SKIP_INSTALL OFF)
set(BUILD_SHARED_LIBS OFF)
set(SPDLOG_BUILD_SHARED OFF)
set(SPDLOG_INSTALL OFF)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Binary)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Binary)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Binary)

if (CMAKE_SYSTEM_NAME MATCHES "Linux")
    message(STATUS "current platform: Linux")
    set(CURRENT_PLATFORM PLATFORM_LINUX)
elseif (CMAKE_SYSTEM_NAME MATCHES "Windows")
    message(STATUS "current platform: Windows")
    set(CURRENT_PLATFORM PLATFORM_WINDOWS)
elseif (CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
    message(STATUS "current platform: FreeBSD")
    set(CURRENT_PLATFORM PLATFORM_FREEBSD)
else ()
    message(STATUS "other platform: ${CMAKE_SYSTEM_NAME}")
    set(CURRENT_PLATFORM PLATFORM_OTHER)
endif ()

message(STATUS "CURRENT_PLATFORM=${CURRENT_PLATFORM}")

set(FREETYPE_INC_DIR "${CMAKE_SOURCE_DIR}/3rd/freetype/include")
set(SDL_TTF_INC_DIR "${CMAKE_SOURCE_DIR}/3rd/SDL_ttf")
set(SDL_INC_DIR "${CMAKE_SOURCE_DIR}/3rd/SDL/include")
set(STB_INC_DIR "${CMAKE_SOURCE_DIR}/stb")
set(SPDLOG_INC_DIR "${CMAKE_SOURCE_DIR}/3rd/spdlog/include")
set(SPIRV_HEADERS_INC_DIR "${CMAKE_SOURCE_DIR}/3rd/spirv-headers/include")
set(SPIRV_REFLECT_INC_DIR "${CMAKE_SOURCE_DIR}/3rd/spirv-reflect")
set(THIRD_PARTY_DIR "${CMAKE_SOURCE_DIR}/3rd")
set(LIB_MULBERRY_INC_DIR "${CMAKE_SOURCE_DIR}/mulberry")

add_subdirectory(${CMAKE_SOURCE_DIR}/3rd/freetype)
add_subdirectory(${CMAKE_SOURCE_DIR}/3rd/SDL)
add_subdirectory(${CMAKE_SOURCE_DIR}/3rd/SDL_ttf)
add_subdirectory(${CMAKE_SOURCE_DIR}/3rd/glslang)
add_subdirectory(${CMAKE_SOURCE_DIR}/3rd/spdlog)
add_subdirectory(${CMAKE_SOURCE_DIR}/3rd/spirv-headers)
add_subdirectory(${CMAKE_SOURCE_DIR}/3rd/spirv-reflect)
add_subdirectory(${CMAKE_SOURCE_DIR}/3rd/stb)

if(WIN32)
    set_property(TARGET freetype PROPERTY FOLDER 3rd)
    set_property(TARGET stb PROPERTY FOLDER 3rd)
    set_property(TARGET spdlog PROPERTY FOLDER 3rd)
    set_property(TARGET spirv-reflect  PROPERTY FOLDER 3rd)
    set_property(TARGET SPIRV-Headers  PROPERTY FOLDER 3rd)
    set_property(TARGET SDL2-static PROPERTY FOLDER 3rd/SDL2)
    set_property(TARGET SDL2_ttf PROPERTY FOLDER 3rd/SDL2)
    set_property(TARGET SDL2main PROPERTY FOLDER 3rd/SDL2)
    set_property(TARGET uninstall PROPERTY FOLDER 3rd/SDL2)
    set_property(TARGET glslang PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET MachineIndependent PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET OSDependent PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET GenericCodeGen PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET OGLCompiler PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET glslang-default-resource-limits  PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET SPVRemapper  PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET SPIRV  PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET HLSL  PROPERTY FOLDER 3rd/glslang)
    set_property(TARGET install-headers  PROPERTY FOLDER 3rd/glslang)
endif()

add_subdirectory(${CMAKE_SOURCE_DIR}/mulberry)
add_subdirectory(${CMAKE_SOURCE_DIR}/tests)